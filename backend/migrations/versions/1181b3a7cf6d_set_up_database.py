"""set up database

Revision ID: 1181b3a7cf6d
Revises: c1b25283efd9
Create Date: 2024-11-01 21:37:04.014036

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1181b3a7cf6d'
down_revision = 'c1b25283efd9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('attractions', schema=None) as batch_op:
        batch_op.alter_column('city_id',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=60),
               existing_nullable=False)

    with op.batch_alter_table('cities', schema=None) as batch_op:
        batch_op.alter_column('state_id',
               existing_type=mysql.VARCHAR(length=30),
               type_=sa.String(length=60),
               existing_nullable=False)

    with op.batch_alter_table('dashboards', schema=None) as batch_op:
        batch_op.add_column(sa.Column('travel_id', sa.String(length=60), nullable=False))
        batch_op.create_foreign_key(None, 'travel_plans', ['travel_id'], ['id'])

    with op.batch_alter_table('travel_plans', schema=None) as batch_op:
        batch_op.alter_column('state_id',
               existing_type=mysql.VARCHAR(length=60),
               type_=sa.String(length=1000),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('travel_plans', schema=None) as batch_op:
        batch_op.alter_column('state_id',
               existing_type=sa.String(length=1000),
               type_=mysql.VARCHAR(length=60),
               existing_nullable=False)

    with op.batch_alter_table('dashboards', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('travel_id')

    with op.batch_alter_table('cities', schema=None) as batch_op:
        batch_op.alter_column('state_id',
               existing_type=sa.String(length=60),
               type_=mysql.VARCHAR(length=30),
               existing_nullable=False)

    with op.batch_alter_table('attractions', schema=None) as batch_op:
        batch_op.alter_column('city_id',
               existing_type=sa.String(length=60),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    # ### end Alembic commands ###
